---
# tasks file for mssql

- name: add yum repository packages-microsoft-com-mssql-server-2019
  ansible.builtin.yum_repository:
    name: "{{ item.name }}"
    state: present
    baseurl: "{{ item.baseurl }}"
    description: "{{ item.description }}"
    gpgkey: "{{ mssql_gpgkey }}"
    gpgcheck: yes
  when:
    - ansible_distribution in [ "CentOS", "Fedora", "RedHat", "Rocky", "Amazon" ]
  loop: "{{ mssql_rhel_repositories }}"
  loop_control:
    label: "{{ item.name }}"
  tags:
    - mssql

- name: apt add key
  ansible.builtin.apt_key:
    url: "{{ mssql_gpgkey }}"
    state: present
  when:
    - ansible_os_family == "Debian"
  tags:
    - mssql

- name: add apt repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64,arm64,armhf] "{{ item.repo }}" {{ ansible_distribution_release }} main
    state: present
  when:
    - ansible_os_family == "Debian"
  loop: "{{ mssql_ubuntu_repositories }}"
  tags:
    - mssql

- name: install software mssql-server (package)
  ansible.builtin.package:
    name: "{{ mssql_server_package }}"
    state: present
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution != "Ubuntu"
  notify:
    - stop mssql-server
    - configure mssql-server using mssql-conf
    - set network.ipaddress
  tags:
    - mssql

- name: install software in mssql-server (apt)
  ansible.builtin.apt:
    name: "{{ mssql_server_package }}"
    state: present
    allow_unauthenticated: yes
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution == "Ubuntu"
  notify:
    - configure mssql-server using mssql-conf
  tags:
    - mssql

# - name: flush handlers
#   ansible.builtin.meta: flush_handlers

- name: install software mssql-tools (package)
  ansible.builtin.package:
    name: mssql-tools
    state: present
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution != "Ubuntu"
  tags:
    - mssql

- name: install software in mssql-tools (apt)
  ansible.builtin.apt:
    name: mssql-tools
    state: present
    allow_unauthenticated: yes
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution == "Ubuntu"
  tags:
    - mssql

- name: install software mssql-server-agent (package)
  ansible.builtin.package:
    name: "{{ mssql_server_agent_package }}"
    state: present
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution != "Ubuntu" and mssql_version == 2017
  notify:
    - restart mssql-server
  tags:
    - mssql

- name: install software in mssql-server-agent (apt)
  ansible.builtin.apt:
    name: "{{ mssql_server_agent_package }}"
    state: present
    allow_unauthenticated: yes
  environment:
    ACCEPT_EULA: Y
  when:
    - ansible_distribution == "Ubuntu" and mssql_version == 2017
  notify:
    - restart mssql-server
  tags:
    - mssql

- name: install mssql-server-fts
  ansible.builtin.package:
    name: "{{ mssql_fts_package }}"
  when:
    - mssql_fts | bool
  notify:
    - restart mssql-server
  tags:
    - mssql

- name: flush handlers
  ansible.builtin.meta: flush_handlers
  tags:
    - mssql

- name: start and enable mssql-server
  ansible.builtin.service:
    name: mssql-server
    state: started
    enabled: yes
  environment:
    ACCEPT_EULA: Y
  tags:
    - mssql

- name: create database
  ansible.builtin.shell: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P {{ mssql_sa_password }} -Q 'create database {{ mssql_db_name }} COLLATE SQL_Latin1_General_CP1_CS_AS SET READ_COMMITTED_SNAPSHOT ON;'
  tags:
    - mssql
    - newdb

- name: create user
  ansible.builtin.shell: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P {{ mssql_sa_password }} -Q 'CREATE LOGIN {{ mssql_user_name }} WITH PASSWORD = {{ mssql_user_pass }};'
  tags:
    - mssql
    - newdb

- name: grant privillege to user
  ansible.builtin.shell: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P {{ mssql_sa_password }} -Q 'GRANT ALTER {{ mssql_db_name }} LOGIN TO {{ mssql_user_name }};'
  tags:
    - mssql
    - newdb
